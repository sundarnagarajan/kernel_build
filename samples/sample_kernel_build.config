# ------------------------------------------------------------------------
#  - Config variables override defaults
#  - Environment variables override config variables
#  - Config variables NEVER override environment variables
# ------------------------------------------------------------------------


# ------------------------------------------------------------------------
# Kernel type, version, URL
# ------------------------------------------------------------------------
KERNEL_TYPE=latest



# ------------------------------------------------------------------------
# Variables specifying paths:
# ------------------------------------------------------------------------
KERNEL_BUILD_DIR=~/kernel/build



# ------------------------------------------------------------------------
# Variables related to signing source packages
# ------------------------------------------------------------------------
DEBEMAIL='myemail@example.com'
DEBFULLNAME='My Full Name'
GPG_DEFAULT_KEY_SET=yes



# ------------------------------------------------------------------------
# Building kernel metapackages
# ------------------------------------------------------------------------
# To skip building metapackages, set KERNEL__BUILD_META_PACKAGE=no
# If not 'yes', metapackages will not be built
KERNEL__BUILD_META_PACKAGE=yes
#
META_PKGNAME_PREFIX=cherrytux
# Defaults to 'cherrytux



# ------------------------------------------------------------------------
# Building ZFS
# ------------------------------------------------------------------------
# Set KERNEL_BUILD_ZFS=no, to skip building ZFS
# If not 'yes', ZFS will NOT be built
KERNEL_BUILD_ZFS=yes



# ------------------------------------------------------------------------
# Variables related to upload to Launchpad PPA
# ------------------------------------------------------------------------
PPA_MAINTAINER="$DEBFULLNAME <${DEBEMAIL}>"
DPUT_PPA_NAME=cherrytux-test
DPUT_PPA_NAME=cherrytux



# ------------------------------------------------------------------------
# For local debian repository (local_upload.sh)
# ------------------------------------------------------------------------
# If you do NOT have a local repository, set KERNEL__DO_LOCAL_UPLOAD=no
KERNEL__DO_LOCAL_UPLOAD=yes
#
#
# REQUIRED - if unset will not upload to local repository
LOCAL_DEB_REPO_DIR=/usr/local/debrepo/kernel
#
#
# If unset will default to dist on local machine (from lsb_release -c)
LOCAL_DEB_DISTS="xenial bionic"




# ------------------------------------------------------------------------
# Nothing set below this
# ------------------------------------------------------------------------
#
# Can ONLY be set as env var - location of kernel_build config
# Defaults to !/.kernel_build.config
# ------------------------------------------------------------
#   KERNEL_BUILD_CONFIG
#
#
# ------------------------------------------------------------------------
# Kernel type, version, URL
# ------------------------------------------------------------------------
# KERNEL_TYPE=latest
# -   Will filter available kernels
# -   IGNORED if it is not a recognized type:
#     latest|mainline|stable|longterm
#
# KERNEL_VERSION=
# -   No default value
# -   Will override version from config file
# -   Will filter available kernels
#
#   KERNEL_SOURCE_URL"


# ------------------------------------------------------------------------
# Choose which steps are performed / skipped
# ------------------------------------------------------------------------
#   KERNEL__APPLY_PATCHES=no        --> no patches will be applied
#
#   KERNEL__BUILD_META_PACKAGE=no   --> no metapackages will be built
#
#   KERNEL__BUILD_SRC_PKG=no        --> no source package will be built
#                                   --> no upload to Launchpad PPA
#
#   KERNEL__DO_LOCAL_UPLOAD=no      --> no upload to lodal reprepro repo
#
# ------------------------------------------------------------------------
# Variables specifying paths:
# ------------------------------------------------------------------------
#
# KERNEL_BUILD_DIR=
# -   Default: $(pwd)/debs
# -   All path components except the last one MUST exist
# -   If last path component does not exist, it is created
# -   If last path component exists, all files/dirs under that path are DELETED
#
# KERNEL_CONFIG=
# -   Default: config.kernel in same dir as patch_and_build_kernel.sh
# -   FULL PATH to existing config file
# -   If env var is set, file MUST exist
#
# KERNEL_PATCH_DIR=
# -   FULL Path to dir containing kernel patches
# -   Default: 'patches' directory in the same dir as patch_and_build_kernel.sh
# -   If env var is set and invalid, no patches are applied
#
# -   Each file in directory can contain one or more patches
# -   Patches are applied in file (lexicographic order)
# -   Patch files could be named starting with '001_', '002_' ... to
#     visiually indicate patch order, but this is not required. Patches
#     are applied by considering patch files in order as listed by 'for i
#     in *'
# -   Patch filenames ending in '.optional' are applied if possible.
#     Failures are ignored
# -   Patch filenames NOT ending in '.optional' are considered mandatory.
#     Kernel build FAILS if patch does not apply.
# -   Mandatory patch files can end in '.patch', although this is not
#     required
#
# KERNEL_CONFIG_PREFS=
# -   FULL path to file containing name=value pairs that will be applied
#     to the config while building
# -   See config.prefs format below
# -   Default: config.prefs in the same dir as patch_and_build_kernel.sh
# -   If env var is set and invalid, no config prefs are applied
#
# ------------------------------------------------------------------------
# Variables related to signing source packages
# ------------------------------------------------------------------------
# If BOTH DEBEMAIL AND DEBFULLNAME are set, Maintainer field of source
# package is set using DEBEMAIL and DEBFULLNAME
# Source package build and PPA Upload will work even if these are not set
#
# DEBEMAIL=my.email@example.com
# Default: root@`hostname -s`
# Sets email of Maintainer field in binary deb and .dsc file
#
# DEBFULLNAME='My FullName'
# Default: Anonymous
# Sets full name of Maintainer field in binary deb and .dsc file
#
# GPG_KEYID=
# No default value
# Should be a gpg key fingerprint
#
# GPG_DEFAULT_KEY_SET=
# Default: Empty
# Indicates default_key is set in ~/gnupg/gpg.conf
# If not empty, source package signing will be attempted even if
# GPG_KEYID is not set
# If not set:
#   - source package will not be signed
#   - An unsigned package will never be accepted on Launchpad.Net
#   - Because of this, patch_and_build_kernel.sh will BUILD source
#       package, but will NOT upload using dput

# ------------------------------------------------------------------------
# Variables related to upload to Launchpad PPA
# ------------------------------------------------------------------------
# DPUT_PPA_NAME=
# No default value
# If not set, source package may be built, but will NOT be uploaded
# In addition to setting DPUT_PPA_NAME, you need to:
#   - Have SSH Keys configured on your Launchpad account FOR THE MACHINE
#       where patch_and_build_kernel.sh is running
#   - Have ~/.dput.cf setup correctly - see sample_dput.cf in the same
#       directory as patch_and_build_kernel.sh

# ------------------------------------------------------------------------
# Variables related to upload to local reprepro repository:
# ------------------------------------------------------------------------
# LOCAL_DEB_REPO_DIR
# No default value
# If unset will not upload to local repository
#
# LOCAL_DEB_DISTS
# If unset will default to dist on local machine (from lsb_release -c)
#

# ------------------------------------------------------------------------
# Other variables:
# ------------------------------------------------------------------------

# NUM_THREADS=
# -   Default: (available_cores - 1)
# -   Number of threads to use
# -   Limited to (available_cores - 1) at most
# -   Intended to use to limit to LESS than (available_cores - 1)
#
# META_PKGNAME_PREFIX - defaults to 'cherrytux'
#
# GIT_CLONE_COMMAND - should not have to override
